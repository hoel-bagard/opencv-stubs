[project]
name = "opencv-stubs"
dynamic = ["version"]
authors = [{ name = "Bagard Hoel" }]
description = "Unofficial stubs for the opencv-python package."
keywords = ["OpenCV", "stubs"]
readme = "README.md"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
]
license = { text = "MIT" }
requires-python = ">=3.8"

[project.urls]
"Homepage" = "https://github.com/hoel-bagard/opencv-stubs"
"Bug Tracker" = "https://github.com/hoel-bagard/opencv-stubs/issues"

[project.optional-dependencies]
opencv = ["opencv-python>=4.7.0"]
opencv-contrib = ["opencv-contrib-python>=4.7.0"]
opencv-headless = ["opencv-python-headless>=4.7.0"]

[dependency-groups]
dev = ["ipython>=8.12.3; python_version >= '3.9'"]
lint = [
  # Typing
  "pyright>=1.1.389",
  "numpy>=1.21,<2.0",
  # Python formatting
  "ruff>=0.11.9",
  # Spelling
  "codespell>=2.3.0; python_version >= '3.9'",
  # Markdown
  "mdformat>=0.7.22; python_version >= '3.9'",
  # To support GitHub's Markdown
  "mdformat-footnote>=0.1.1",
  "mdformat-frontmatter>=2.0.8; python_version >= '3.9'",
  "mdformat-gfm>=0.3.6; python_version >= '3.9'",
  "mdformat-gfm-alerts>=1.0.1; python_version >= '3.9'",
  # Format python, bash (requires shfmt to be present), JSON, TOML and YAML code blocks.
  "markdown-format-ruff>=1.0.0",
  "mdformat-shfmt>=0.1.0",
  "mdformat-taplo>=0.9.3",
  "mdformat-yamlfmt>=0.0.1",
  "mdformat-json>=1.0.0",
]

[build-system]
requires = ["hatchling>=1.10.0"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/cv2-stubs/__init__.pyi"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/.pytest_cache", "/build", "/dist", "/docs"]

[tool.hatch.build.targets.wheel]
packages = ["src/cv2-stubs"]

[tool.hatch.envs.pypi.scripts]
# hatch run pypi:publish_test
publish_test = "hatch build --clean && hatch publish -r test"
publish = "hatch build --clean && hatch publish"

[tool.ruff]
line-length = 20000
exclude = [".venv"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "A001",   # Rule checking for variables shadowing a Python builtin. Not something we can control here.
  "A002",   # Rule checking for function argument shadowing a Python builtin. Not something we can control here.
  "ANN",    # Rule checking for type annotations. There are too many missing ones.
  "COM812", # Rule checking for missing trailing comma. Conflicts with the formatter.
  "D",      # Do not check for docstrings.
  "F403",   # Rule checking for * imports. Fix them if possible.
  "F405",   # Rule checking for variables that are undefined, or defined from star imports. Fix them if possible.
  "N",      # Rule checking for naming conventions. Not something we can control here.
  "ICN001", # Rule checking how numpy/numpy.typing are imported. Do not use it since they are sometimes imported as _np/_npt.
  "PYI021", # Rule checking for docstrings included in stubs. Here we explicitly want the docstrings.
  "PYI042", # Rule checking for naming conventions. Not something we can control here.
  "PYI011", # Rule checking for default values. Some constants are used as default values.
]

[tool.ruff.lint.per-file-ignores]
"src/**/__init__.pyi" = [
  "F401", # Unused imports error.
]
"src/**.pyi" = [
  "PT028", # Test function parameter  has default argument. These are OpenCV functions, we cannot change that.
]
"utils/**.py" = [
  "INP001",  # Rule checking for missing `__init__.py`. Not relevant for scripts.
  "PLR2004",
  "RET504",  # Rule checking for unnecessary assignment before `return` statement. Ignored in favor of better readability.
  "S",       # Security rules, not relevant here.
  "T201",    # Rule checking for print statements. Prints are ok for small scripts.
]

[tool.ruff.lint.isort]
order-by-type = false

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.pyright]
include = ["src/cv2-stubs"]
pythonVersion = "3.8"
pythonPlatform = "Linux"
typeCheckingMode = "strict"
reportMissingParameterType = false
reportUnknownParameterType = false
reportOverlappingOverload = false
reportIncompatibleMethodOverride = false
reportUnusedImport = false               # Because there are no __all__ in the __init__.pyi

[tool.codespell]
ignore-words-list = "ist"
