name: Release CI

permissions:
  contents: write

on:
  push:
    tags:
      - "v?[0-9]+.[0-9]+.[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # The create-release job runs purely to initialize the GitHub release itself,
  # and names the release after the `x.y.z` tag that was pushed.
  # It's separate from building the release so that we only create the release once.
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        if: env.VERSION == ''
        run: |
          echo "GH_RELEASE_TAG=${{ github.ref_name || inputs.tag_name }}" >> $GITHUB_ENV
          echo "VERSION=$(echo "${{ github.ref_name || inputs.tag_name }}"  | sed 's/^[a-zA-Z]//' )" >> $GITHUB_ENV

      - name: Show the version
        run: |
          echo "version is: $VERSION"

      - name: Check that the tag version and the project version match.
        shell: bash
        run: |
          if ! grep -q "__version__ = \"$VERSION\"" src/cv2-stubs/__init__.pyi; then
            echo "Tag version does not match the one in src/cv2-stubs/__init__.pyi" >&2
            exit 1
          fi

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create $GH_RELEASE_TAG --verify-tag --title $GH_RELEASE_TAG

    outputs:
      gh_release_tag: ${{ env.GH_RELEASE_TAG }}

  build-release:
    name: publish-release
    needs: ["create-release"]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: "0.8.4"
          python-version: "3.12"

      - name: Setup
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Build and publish to PyPi
        run: |
          uv build
          uv publish

      - name: Upload release
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          set -e
          version="${{ needs.create-release.outputs.gh_release_tag }}"
          gh release upload $version ./dist/* --clobber
